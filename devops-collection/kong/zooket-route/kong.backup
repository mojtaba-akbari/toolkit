--
-- PostgreSQL database dump
--

-- Dumped from database version 11.13
-- Dumped by pg_dump version 11.13

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: sync_tags(); Type: FUNCTION; Schema: public; Owner: kong
--

CREATE FUNCTION public.sync_tags() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
        BEGIN
          IF (TG_OP = 'TRUNCATE') THEN
            DELETE FROM tags WHERE entity_name = TG_TABLE_NAME;
            RETURN NULL;
          ELSIF (TG_OP = 'DELETE') THEN
            DELETE FROM tags WHERE entity_id = OLD.id;
            RETURN OLD;
          ELSE

          -- Triggered by INSERT/UPDATE
          -- Do an upsert on the tags table
          -- So we don't need to migrate pre 1.1 entities
          INSERT INTO tags VALUES (NEW.id, TG_TABLE_NAME, NEW.tags)
          ON CONFLICT (entity_id) DO UPDATE
                  SET tags=EXCLUDED.tags;
          END IF;
          RETURN NEW;
        END;
      $$;


ALTER FUNCTION public.sync_tags() OWNER TO kong;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: acls; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.acls (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    consumer_id uuid,
    "group" text,
    cache_key text,
    tags text[],
    ws_id uuid
);


ALTER TABLE public.acls OWNER TO kong;

--
-- Name: acme_storage; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.acme_storage (
    id uuid NOT NULL,
    key text,
    value text,
    created_at timestamp with time zone,
    ttl timestamp with time zone
);


ALTER TABLE public.acme_storage OWNER TO kong;

--
-- Name: basicauth_credentials; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.basicauth_credentials (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    consumer_id uuid,
    username text,
    password text,
    tags text[],
    ws_id uuid
);


ALTER TABLE public.basicauth_credentials OWNER TO kong;

--
-- Name: ca_certificates; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.ca_certificates (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    cert text NOT NULL,
    tags text[],
    cert_digest text NOT NULL
);


ALTER TABLE public.ca_certificates OWNER TO kong;

--
-- Name: certificates; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.certificates (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    cert text,
    key text,
    tags text[],
    ws_id uuid,
    cert_alt text,
    key_alt text
);


ALTER TABLE public.certificates OWNER TO kong;

--
-- Name: cluster_events; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.cluster_events (
    id uuid NOT NULL,
    node_id uuid NOT NULL,
    at timestamp with time zone NOT NULL,
    nbf timestamp with time zone,
    expire_at timestamp with time zone NOT NULL,
    channel text,
    data text
);


ALTER TABLE public.cluster_events OWNER TO kong;

--
-- Name: clustering_data_planes; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.clustering_data_planes (
    id uuid NOT NULL,
    hostname text NOT NULL,
    ip text NOT NULL,
    last_seen timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    config_hash text NOT NULL,
    ttl timestamp with time zone,
    version text,
    sync_status text DEFAULT 'unknown'::text NOT NULL
);


ALTER TABLE public.clustering_data_planes OWNER TO kong;

--
-- Name: consumers; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.consumers (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    username text,
    custom_id text,
    tags text[],
    ws_id uuid
);


ALTER TABLE public.consumers OWNER TO kong;

--
-- Name: hmacauth_credentials; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.hmacauth_credentials (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    consumer_id uuid,
    username text,
    secret text,
    tags text[],
    ws_id uuid
);


ALTER TABLE public.hmacauth_credentials OWNER TO kong;

--
-- Name: jwt_secrets; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.jwt_secrets (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    consumer_id uuid,
    key text,
    secret text,
    algorithm text,
    rsa_public_key text,
    tags text[],
    ws_id uuid
);


ALTER TABLE public.jwt_secrets OWNER TO kong;

--
-- Name: keyauth_credentials; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.keyauth_credentials (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    consumer_id uuid,
    key text,
    tags text[],
    ttl timestamp with time zone,
    ws_id uuid
);


ALTER TABLE public.keyauth_credentials OWNER TO kong;

--
-- Name: locks; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.locks (
    key text NOT NULL,
    owner text,
    ttl timestamp with time zone
);


ALTER TABLE public.locks OWNER TO kong;

--
-- Name: oauth2_authorization_codes; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.oauth2_authorization_codes (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    credential_id uuid,
    service_id uuid,
    code text,
    authenticated_userid text,
    scope text,
    ttl timestamp with time zone,
    challenge text,
    challenge_method text,
    ws_id uuid
);


ALTER TABLE public.oauth2_authorization_codes OWNER TO kong;

--
-- Name: oauth2_credentials; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.oauth2_credentials (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    name text,
    consumer_id uuid,
    client_id text,
    client_secret text,
    redirect_uris text[],
    tags text[],
    client_type text,
    hash_secret boolean,
    ws_id uuid
);


ALTER TABLE public.oauth2_credentials OWNER TO kong;

--
-- Name: oauth2_tokens; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.oauth2_tokens (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    credential_id uuid,
    service_id uuid,
    access_token text,
    refresh_token text,
    token_type text,
    expires_in integer,
    authenticated_userid text,
    scope text,
    ttl timestamp with time zone,
    ws_id uuid
);


ALTER TABLE public.oauth2_tokens OWNER TO kong;

--
-- Name: parameters; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.parameters (
    key text NOT NULL,
    value text NOT NULL,
    created_at timestamp with time zone
);


ALTER TABLE public.parameters OWNER TO kong;

--
-- Name: plugins; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.plugins (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    name text NOT NULL,
    consumer_id uuid,
    service_id uuid,
    route_id uuid,
    config jsonb NOT NULL,
    enabled boolean NOT NULL,
    cache_key text,
    protocols text[],
    tags text[],
    ws_id uuid
);


ALTER TABLE public.plugins OWNER TO kong;

--
-- Name: ratelimiting_metrics; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.ratelimiting_metrics (
    identifier text NOT NULL,
    period text NOT NULL,
    period_date timestamp with time zone NOT NULL,
    service_id uuid DEFAULT '00000000-0000-0000-0000-000000000000'::uuid NOT NULL,
    route_id uuid DEFAULT '00000000-0000-0000-0000-000000000000'::uuid NOT NULL,
    value integer,
    ttl timestamp with time zone
);


ALTER TABLE public.ratelimiting_metrics OWNER TO kong;

--
-- Name: response_ratelimiting_metrics; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.response_ratelimiting_metrics (
    identifier text NOT NULL,
    period text NOT NULL,
    period_date timestamp with time zone NOT NULL,
    service_id uuid DEFAULT '00000000-0000-0000-0000-000000000000'::uuid NOT NULL,
    route_id uuid DEFAULT '00000000-0000-0000-0000-000000000000'::uuid NOT NULL,
    value integer
);


ALTER TABLE public.response_ratelimiting_metrics OWNER TO kong;

--
-- Name: routes; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.routes (
    id uuid NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    name text,
    service_id uuid,
    protocols text[],
    methods text[],
    hosts text[],
    paths text[],
    snis text[],
    sources jsonb[],
    destinations jsonb[],
    regex_priority bigint,
    strip_path boolean,
    preserve_host boolean,
    tags text[],
    https_redirect_status_code integer,
    headers jsonb,
    path_handling text DEFAULT 'v0'::text,
    ws_id uuid,
    request_buffering boolean,
    response_buffering boolean
);


ALTER TABLE public.routes OWNER TO kong;

--
-- Name: schema_meta; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.schema_meta (
    key text NOT NULL,
    subsystem text NOT NULL,
    last_executed text,
    executed text[],
    pending text[]
);


ALTER TABLE public.schema_meta OWNER TO kong;

--
-- Name: services; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.services (
    id uuid NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    name text,
    retries bigint,
    protocol text,
    host text,
    port bigint,
    path text,
    connect_timeout bigint,
    write_timeout bigint,
    read_timeout bigint,
    tags text[],
    client_certificate_id uuid,
    tls_verify boolean,
    tls_verify_depth smallint,
    ca_certificates uuid[],
    ws_id uuid
);


ALTER TABLE public.services OWNER TO kong;

--
-- Name: sessions; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.sessions (
    id uuid NOT NULL,
    session_id text,
    expires integer,
    data text,
    created_at timestamp with time zone,
    ttl timestamp with time zone
);


ALTER TABLE public.sessions OWNER TO kong;

--
-- Name: snis; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.snis (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    name text NOT NULL,
    certificate_id uuid,
    tags text[],
    ws_id uuid
);


ALTER TABLE public.snis OWNER TO kong;

--
-- Name: tags; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.tags (
    entity_id uuid NOT NULL,
    entity_name text,
    tags text[]
);


ALTER TABLE public.tags OWNER TO kong;

--
-- Name: targets; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.targets (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(3)),
    upstream_id uuid,
    target text NOT NULL,
    weight integer NOT NULL,
    tags text[],
    ws_id uuid
);


ALTER TABLE public.targets OWNER TO kong;

--
-- Name: ttls; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.ttls (
    primary_key_value text NOT NULL,
    primary_uuid_value uuid,
    table_name text NOT NULL,
    primary_key_name text NOT NULL,
    expire_at timestamp without time zone NOT NULL
);


ALTER TABLE public.ttls OWNER TO kong;

--
-- Name: upstreams; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.upstreams (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(3)),
    name text,
    hash_on text,
    hash_fallback text,
    hash_on_header text,
    hash_fallback_header text,
    hash_on_cookie text,
    hash_on_cookie_path text,
    slots integer NOT NULL,
    healthchecks jsonb,
    tags text[],
    algorithm text,
    host_header text,
    client_certificate_id uuid,
    ws_id uuid
);


ALTER TABLE public.upstreams OWNER TO kong;

--
-- Name: workspaces; Type: TABLE; Schema: public; Owner: kong
--

CREATE TABLE public.workspaces (
    id uuid NOT NULL,
    name text,
    comment text,
    created_at timestamp with time zone DEFAULT timezone('UTC'::text, CURRENT_TIMESTAMP(0)),
    meta jsonb,
    config jsonb
);


ALTER TABLE public.workspaces OWNER TO kong;

--
-- Data for Name: acls; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.acls (id, created_at, consumer_id, "group", cache_key, tags, ws_id) FROM stdin;
\.


--
-- Data for Name: acme_storage; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.acme_storage (id, key, value, created_at, ttl) FROM stdin;
\.


--
-- Data for Name: basicauth_credentials; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.basicauth_credentials (id, created_at, consumer_id, username, password, tags, ws_id) FROM stdin;
\.


--
-- Data for Name: ca_certificates; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.ca_certificates (id, created_at, cert, tags, cert_digest) FROM stdin;
\.


--
-- Data for Name: certificates; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.certificates (id, created_at, cert, key, tags, ws_id, cert_alt, key_alt) FROM stdin;
\.


--
-- Data for Name: cluster_events; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.cluster_events (id, node_id, at, nbf, expire_at, channel, data) FROM stdin;
\.


--
-- Data for Name: clustering_data_planes; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.clustering_data_planes (id, hostname, ip, last_seen, config_hash, ttl, version, sync_status) FROM stdin;
\.


--
-- Data for Name: consumers; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.consumers (id, created_at, username, custom_id, tags, ws_id) FROM stdin;
\.


--
-- Data for Name: hmacauth_credentials; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.hmacauth_credentials (id, created_at, consumer_id, username, secret, tags, ws_id) FROM stdin;
\.


--
-- Data for Name: jwt_secrets; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.jwt_secrets (id, created_at, consumer_id, key, secret, algorithm, rsa_public_key, tags, ws_id) FROM stdin;
\.


--
-- Data for Name: keyauth_credentials; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.keyauth_credentials (id, created_at, consumer_id, key, tags, ttl, ws_id) FROM stdin;
\.


--
-- Data for Name: locks; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.locks (key, owner, ttl) FROM stdin;
\.


--
-- Data for Name: oauth2_authorization_codes; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.oauth2_authorization_codes (id, created_at, credential_id, service_id, code, authenticated_userid, scope, ttl, challenge, challenge_method, ws_id) FROM stdin;
\.


--
-- Data for Name: oauth2_credentials; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.oauth2_credentials (id, created_at, name, consumer_id, client_id, client_secret, redirect_uris, tags, client_type, hash_secret, ws_id) FROM stdin;
\.


--
-- Data for Name: oauth2_tokens; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.oauth2_tokens (id, created_at, credential_id, service_id, access_token, refresh_token, token_type, expires_in, authenticated_userid, scope, ttl, ws_id) FROM stdin;
\.


--
-- Data for Name: parameters; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.parameters (key, value, created_at) FROM stdin;
cluster_id	f7b18001-6267-4d66-971d-c46825e26b03	\N
\.


--
-- Data for Name: plugins; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.plugins (id, created_at, name, consumer_id, service_id, route_id, config, enabled, cache_key, protocols, tags, ws_id) FROM stdin;
f1cc425e-36d6-4a01-81be-127e7f5b9875	2021-09-26 06:46:52+00	response-transformer	\N	4437d75c-187b-4eb1-8921-b63375e240e3	\N	{"add": {"json": [], "headers": [], "json_types": []}, "append": {"json": [], "headers": [], "json_types": []}, "remove": {"json": [], "headers": ["X-Powered-By"]}, "rename": {"headers": []}, "replace": {"json": [], "headers": ["Server:Nemesis"], "json_types": []}}	t	plugins:response-transformer::4437d75c-187b-4eb1-8921-b63375e240e3:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
63fe6fd0-aa89-413e-adfb-6316986f9b6f	2021-09-26 06:47:16+00	response-transformer	\N	4453a967-12d1-4eb0-8282-615dbeed79d3	\N	{"add": {"json": [], "headers": [], "json_types": []}, "append": {"json": [], "headers": [], "json_types": []}, "remove": {"json": [], "headers": ["X-Powered-By"]}, "rename": {"headers": []}, "replace": {"json": [], "headers": ["Server:Nemesis"], "json_types": []}}	t	plugins:response-transformer::4453a967-12d1-4eb0-8282-615dbeed79d3:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
c2672716-cae5-4b26-a01c-73efbb7a655c	2021-09-26 06:47:35+00	response-transformer	\N	dfca2ac3-9ad3-4f69-a0f9-862818f64489	\N	{"add": {"json": [], "headers": [], "json_types": []}, "append": {"json": [], "headers": [], "json_types": []}, "remove": {"json": [], "headers": ["X-Powered-By"]}, "rename": {"headers": []}, "replace": {"json": [], "headers": ["Server:Nemesis"], "json_types": []}}	t	plugins:response-transformer::dfca2ac3-9ad3-4f69-a0f9-862818f64489:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
ea58fd54-20db-4e90-9ba0-5d0ef2d5ea0a	2021-09-25 15:31:30+00	response-transformer	\N	dfca2ac3-9ad3-4f69-a0f9-862818f64489	8a7f8564-de36-42e6-bb5f-be9851d7385b	{"add": {"json": [], "headers": [], "json_types": []}, "append": {"json": [], "headers": [], "json_types": []}, "remove": {"json": [], "headers": []}, "rename": {"headers": []}, "replace": {"json": [], "headers": ["Server:aboozar", "Via:milad"], "json_types": []}}	t	plugins:response-transformer:8a7f8564-de36-42e6-bb5f-be9851d7385b:dfca2ac3-9ad3-4f69-a0f9-862818f64489:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
14802be3-04dd-4666-8def-d8ec9b324546	2021-09-26 06:47:57+00	response-transformer	\N	ef02aa75-8110-402a-9cf1-75995b3488f9	\N	{"add": {"json": [], "headers": [], "json_types": []}, "append": {"json": [], "headers": [], "json_types": []}, "remove": {"json": [], "headers": ["X-Powered-By"]}, "rename": {"headers": []}, "replace": {"json": [], "headers": ["Server:Nemesis"], "json_types": []}}	t	plugins:response-transformer::ef02aa75-8110-402a-9cf1-75995b3488f9:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
d1b3a6df-2eaa-4afc-a969-74abfd83b150	2021-09-26 06:43:55+00	response-transformer	\N	06bf665e-b710-47af-a38e-c551fdb9a753	\N	{"add": {"json": [], "headers": [], "json_types": []}, "append": {"json": [], "headers": [], "json_types": []}, "remove": {"json": [], "headers": ["X-Powered-By"]}, "rename": {"headers": []}, "replace": {"json": [], "headers": ["Server:Nemesis"], "json_types": []}}	t	plugins:response-transformer::06bf665e-b710-47af-a38e-c551fdb9a753:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
046b8391-1657-4cce-89dd-b9d738270c96	2021-09-26 06:42:13+00	response-transformer	\N	0fe164ff-5eef-4ef8-b493-0abb3a9baf5c	\N	{"add": {"json": [], "headers": [], "json_types": []}, "append": {"json": [], "headers": [], "json_types": []}, "remove": {"json": [], "headers": ["X-Powered-By"]}, "rename": {"headers": []}, "replace": {"json": [], "headers": ["Server:Nemesis"], "json_types": []}}	t	plugins:response-transformer::0fe164ff-5eef-4ef8-b493-0abb3a9baf5c:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
a5445735-7881-4eaa-adae-391aaeea8621	2021-09-26 08:52:52+00	cors	\N	ef02aa75-8110-402a-9cf1-75995b3488f9	\N	{"headers": ["Accept", " Accept-CH", " Accept-Charset", " Accept-Datetime", " Accept-Encoding", " Accept-Ext", " Accept-Features", " Accept-Language", " Accept-Params", " Accept-Ranges", " Access-Control-Allow-Credentials", " Access-Control-Allow-Headers", " Access-Control-Allow-Methods", " Access-Control-Allow-Origin", " Access-Control-Expose-Headers", " Access-Control-Max-Age", " Access-Control-Request-Headers", " Access-Control-Request-Method", " Age", " Allow", " Alternates", " Authentication-Info", " Authorization", " C-Ext", " C-Man", " C-Opt", " C-PEP", " C-PEP-Info", " CONNECT", " Cache-Control", " Compliance", " Connection", " Content-Base", " Content-Disposition", " Content-Encoding", " Content-ID", " Content-Language", " Content-Length", " Content-Location", " Content-MD5", " Content-Range", " Content-Script-Type", " Content-Security-Policy", " Content-Style-Type", " Content-Transfer-Encoding", " Content-Type", " Content-Version", " Cookie", " Cost", " DAV", " DELETE", " DNT", " DPR", " Date", " Default-Style", " Delta-Base", " Depth", " Derived-From", " Destination", " Differential-ID", " Digest", " ETag", " Expect", " Expires", " Ext", " From", " GET", " GetProfile", " HEAD", " HTTP-date", " Host", " IM", " If", " If-Match", " If-Modified-Since", " If-None-Match", " If-Range", " If-Unmodified-Since", " Keep-Alive", " Label", " Last-Event-ID", " Last-Modified", " Link", " Location", " Lock-Token", " MIME-Version", " Man", " Max-Forwards", " Media-Range", " Message-ID", " Meter", " Negotiate", " Non-Compliance", " OPTION", " OPTIONS", " OWS", " Opt", " Optional", " Ordering-Type", " Origin", " Overwrite", " P3P", " PEP", " PICS-Label", " POST", " PUT", " Pep-Info", " Permanent", " Position", " Pragma", " ProfileObject", " Protocol", " Protocol-Query", " Protocol-Request", " Proxy-Authenticate", " Proxy-Authentication-Info", " Proxy-Authorization", " Proxy-Features", " Proxy-Instruction", " Public", " RWS", " Range", " Referer", " Refresh", " Resolution-Hint", " Resolver-Location", " Retry-After", " Safe", " Sec-Websocket-Extensions", " Sec-Websocket-Key", " Sec-Websocket-Origin", " Sec-Websocket-Protocol", " Sec-Websocket-Version", " ", " sec-fetch-dest", " sec-fetch-mode", " sec-fetch-site", " Security-Scheme", " Server", " Set-Cookie", " Set-Cookie2", " SetProfile", " SoapAction", " Status", " Status-URI", " Strict-Transport-Security", " SubOK", " Subst", " Surrogate-Capability", " Surrogate-Control", " TCN", " TE", " TRACE", " Timeout", " Title", " Trailer", " Transfer-Encoding", " UA-Color", " UA-Media", " UA-Pixels", " UA-Resolution", " UA-Windowpixels", " URI", " Upgrade", " User-Agent", " Variant-Vary", " Vary", " Version", " Via", " Viewport-Width", " WWW-Authenticate", " Want-Digest", " Warning", " Width", " X-Content-Duration", " X-Content-Security-Policy", " X-Content-Type-Options", " X-CustomHeader", " X-DNSPrefetch-Control", " X-Forwarded-For", " X-Forwarded-Port", " X-Forwarded-Proto", " X-Frame-Options", " X-Modified", " X-Mx-ReqToken", " X-OTHER", " X-PING", " X-PINGOTHER", " X-Powered-By", " X-Requested-With", " contnet-type"], "max_age": 3600, "methods": ["GET", "HEAD", "POST", "PUT", "OPTIONS", "PATCH", "DELETE"], "origins": ["http://172.30.20.35:3004", "http://localhost:3004", "http://m.snappxtage.ir"], "credentials": true, "exposed_headers": ["*"], "preflight_continue": false}	t	plugins:cors::ef02aa75-8110-402a-9cf1-75995b3488f9:::18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	{grpc,grpcs,http,https}	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
\.


--
-- Data for Name: ratelimiting_metrics; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.ratelimiting_metrics (identifier, period, period_date, service_id, route_id, value, ttl) FROM stdin;
\.


--
-- Data for Name: response_ratelimiting_metrics; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.response_ratelimiting_metrics (identifier, period, period_date, service_id, route_id, value) FROM stdin;
\.


--
-- Data for Name: routes; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.routes (id, created_at, updated_at, name, service_id, protocols, methods, hosts, paths, snis, sources, destinations, regex_priority, strip_path, preserve_host, tags, https_redirect_status_code, headers, path_handling, ws_id, request_buffering, response_buffering) FROM stdin;
172a0dd1-cf27-41a4-8e75-61a93fff988c	2021-09-25 14:06:42+00	2021-09-25 14:13:18+00	vendor-auth	06bf665e-b710-47af-a38e-c551fdb9a753	{http,https}	{OPTIONS,HEAD,PATCH,PUT,DELETE,POST,GET}	{newapi.snappxtage.ir,api.snappxtage.ir}	{/vendor-auth/*}	\N	\N	\N	102	t	t	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
bd7de8c2-3440-42c1-b1d8-1d01fd8512ef	2021-09-26 06:52:35+00	2021-09-26 06:52:35+00	search-new-get-5	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/user/always$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
380e1967-a7cd-480c-a29e-ed60b2b0f182	2021-09-25 12:50:09+00	2021-09-25 13:25:40+00	api-core	4437d75c-187b-4eb1-8921-b63375e240e3	{http,https}	{GET,POST,DELETE,PATCH,PUT,HEAD,OPTIONS}	{newapi.snappxtage.ir,api.snappxtage.ir}	{/*}	\N	\N	\N	-1	t	t	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
2de8d873-962f-48f9-9182-59ac84aa265a	2021-09-26 06:52:55+00	2021-09-26 06:52:55+00	search-new-get-6	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/user/service$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
36b9e1fa-700d-4524-8a93-4f8567f4c77b	2021-09-25 13:12:48+00	2021-09-25 13:55:23+00	direct-auth	06bf665e-b710-47af-a38e-c551fdb9a753	{http,https}	{GET,POST,PATCH,DELETE,PUT,HEAD,OPTIONS}	{auth.snappxtage.ir}	{/*}	\N	\N	\N	-1	t	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
156fe7be-b49d-49d2-bc50-1cc81b1286a9	2021-09-26 07:01:24+00	2021-09-26 07:01:24+00	search-new-get-12	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/search-test$,/mobile/v2/search-test/$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
b49bf01c-7389-455a-8353-3dc035c8bf65	2021-09-26 07:02:37+00	2021-09-26 07:02:37+00	search-new-get-13	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v1/zooket/vendors-list$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
902b9d24-e6c2-45b0-be9c-22c76fe1ab06	2021-09-25 13:07:52+00	2021-09-25 13:55:32+00	direct-vendor-authomation	0fe164ff-5eef-4ef8-b493-0abb3a9baf5c	{http,https}	{GET,POST,DELETE,PATCH,PUT,HEAD,OPTIONS}	{vendor.snappxtage.ir}	{/*}	\N	\N	\N	-1	t	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
6c1e05bb-859e-4493-8764-ed9ea56bf89a	2021-09-26 06:53:19+00	2021-09-26 06:53:19+00	search-new-get-7	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/user/cuisine$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
628fc3a9-d8e5-49d3-bc76-286332213bee	2021-09-25 10:41:54+00	2021-09-25 14:04:54+00	stock-service	4453a967-12d1-4eb0-8282-615dbeed79d3	{http,https}	{POST,GET,OPTIONS,HEAD,PUT,PATCH,DELETE}	{newapi.snappxtage.ir,api.snappxtage.ir}	{/stock-services/*}	\N	\N	\N	100	t	t	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
b30257a8-247f-4aeb-928e-b0a4a4390f2a	2021-09-25 10:44:13+00	2021-09-25 14:05:10+00	direct-stock-server	4453a967-12d1-4eb0-8282-615dbeed79d3	{http,https}	{GET,POST,OPTIONS,HEAD,PUT,PATCH,DELETE}	{stock.*}	\N	\N	\N	\N	-1	t	t	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
df62e504-082a-44d0-b621-aee2cb80d404	2021-09-25 13:09:10+00	2021-09-25 14:05:37+00	vendor-automation	0fe164ff-5eef-4ef8-b493-0abb3a9baf5c	{http,https}	{GET,POST,DELETE,PATCH,PUT,HEAD,OPTIONS}	{api.snappxtage.ir,newapi.snappxstage.ir}	{/vendor-automations/*}	\N	\N	\N	100	t	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
16704921-2efe-4bb3-bc93-68eeea5b61c5	2021-09-26 06:53:46+00	2021-09-26 06:53:46+00	search-new-get-8	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/user/recommended-vendor$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
5b673713-5c25-42cf-98cc-ba9f02ac9919	2021-09-26 06:54:12+00	2021-09-26 06:54:12+00	search-new-get-9	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/user/recommended-product$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
425c6f79-16be-4104-8dd4-c24b6801a160	2021-09-26 07:00:01+00	2021-09-26 07:00:01+00	search-new-get-10	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/search$,/mobile/v3/search/$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
826b1303-7012-4d3c-8b90-7fefffb77084	2021-09-26 07:00:37+00	2021-09-26 07:00:37+00	search-new-get-11	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/search$,/mobile/v2/search/$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
4475469f-813e-47cc-8142-864092ab6b2e	2021-09-26 07:03:14+00	2021-09-26 07:03:14+00	search-new-get-14	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v1/suggest$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
bd2a3db6-27c6-4d3f-aa32-26a830d82082	2021-09-26 07:03:51+00	2021-09-26 07:03:51+00	search-new-get-15	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/product-variation/search$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
1126e068-75a4-4c5f-b768-bebf21605e4c	2021-09-26 07:04:13+00	2021-09-26 07:04:13+00	search-new-get-16	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/product-variation/search-test$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
9cb87bb1-e08b-4ba5-bacc-765756f444ee	2021-09-26 06:38:16+00	2021-09-26 06:38:16+00	search-old-get-4	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v1/chain/product-list$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
646d77d9-ca90-4098-a782-95cfad573b48	2021-09-26 06:38:42+00	2021-09-26 06:38:42+00	search-old-get-5	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/user/new-home$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
8a7f8564-de36-42e6-bb5f-be9851d7385b	2021-09-25 15:06:07+00	2021-09-25 15:08:20+00	vms-api	dfca2ac3-9ad3-4f69-a0f9-862818f64489	{http,https}	{POST,OPTIONS,GET}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/job$}	\N	\N	\N	100	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
7de4672c-5738-46e5-bde0-1e486a6e9a07	2021-09-25 15:06:22+00	2021-09-26 06:33:05+00	search-old-get-1	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/restaurant/vendors-list$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
38d7fafe-3a60-43f9-9ac9-3668f2a2351b	2021-09-26 06:34:53+00	2021-09-26 06:34:53+00	search-old-get-2	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/restaurant/vendors-list-snapp$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
1ef8817d-3481-4d67-9a79-38b3473a5a4a	2021-09-26 06:37:34+00	2021-09-26 06:37:34+00	search-old-get-3	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/restaurant/filters$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
cde68cad-126e-48a4-8a55-80711dc851ce	2021-09-26 06:39:10+00	2021-09-26 06:39:10+00	search-old-get-6	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/user/new-home$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
7c686aba-5859-4eec-93da-970254d13c27	2021-09-26 06:39:52+00	2021-09-26 06:39:52+00	search-old-get-7	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/new-home$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
1a00071c-1f6e-41cb-88e2-711bd0dfb297	2021-09-26 06:40:19+00	2021-09-26 06:40:19+00	search-old-get-8	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	\N	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v2/user/always$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
5d2ca0a6-5942-40d2-8a14-1769e0826b60	2021-09-26 06:40:53+00	2021-09-26 06:40:53+00	search-old-get-9	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/676858d198d35e7713a47e66ba0755c8/mobile-offers/[0-9]+/[0-9]+$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
5a273e27-1ac2-4138-ace5-c51a4b156bd6	2021-09-26 06:41:24+00	2021-09-26 06:41:24+00	search-old-get-10	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile-offers/snapp/[0-9]+/[0-9]+$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
11049936-252c-4300-8daf-18fbd30cafe9	2021-09-26 06:41:52+00	2021-09-26 06:41:52+00	search-old-get-11	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/676858d198d35e7713a47e66ba0755c8/mobile-offers/[0-9]+$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
435333c5-4830-4264-a26f-2124affdae12	2021-09-26 06:42:23+00	2021-09-26 06:42:23+00	search-old-get-12	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/food-party$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
a9d6e84b-692b-4936-b3af-070dbeba07e0	2021-09-26 06:42:46+00	2021-09-26 06:42:46+00	search-old-get-13	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/ground-distance$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
cbedc8cb-6c60-4331-8c49-bb5ea215ae11	2021-09-26 06:45:16+00	2021-09-26 06:45:16+00	search-old-get-14	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/ground-distance-map/[0-9]+/[0-9]+$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
404d69a1-2685-4d4d-a8d1-698d6dee87be	2021-09-26 06:45:50+00	2021-09-26 06:45:50+00	search-old-get-15	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/api/shari$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
a75a7096-0800-4a18-987d-9ca7dde72c04	2021-09-26 06:46:22+00	2021-09-26 06:46:22+00	search-old-get-16	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/dopanic$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
73b8ea14-0d3a-4564-8df7-21e5d222868a	2021-09-26 06:46:58+00	2021-09-26 06:47:29+00	search-old-get-17	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/teststd$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
5c434d4c-38b0-4466-aa9b-46c09d0bbb27	2021-09-26 06:48:27+00	2021-09-26 06:48:27+00	search-old-get-18	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/party/[0-9]+/[0-9]+$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
a8f084d2-4f2b-4657-9a69-4c9e8b6c35c6	2021-09-26 06:50:17+00	2021-09-26 06:50:17+00	search-new-get-1	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/restaurant/search$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
8060f988-b980-4c19-9fd4-4505e615ea94	2021-09-26 06:51:16+00	2021-09-26 06:51:16+00	search-new-get-2	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/restaurant/vendors-list$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
2e346350-aa3e-496e-9b4a-495c59f88f62	2021-09-26 06:51:41+00	2021-09-26 06:51:41+00	search-new-get-3	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/restaurant/vendors-list-test$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
b4e7ecee-3298-42f0-b07d-9a8459b09cd7	2021-09-26 06:52:08+00	2021-09-26 06:52:08+00	search-new-get-4	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v3/restaurant/search-test$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
3569a952-1c3d-4c66-befa-e81afff853b5	2021-09-26 07:05:49+00	2021-09-26 07:05:49+00	search-new-get-17	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/mobile/v1/product/product-list$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
26ef2403-ba12-4900-94c4-2b2ae71c83db	2021-09-26 07:06:13+00	2021-09-26 07:06:13+00	search-new-get-18	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/vendor/search$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
cb17d91f-5897-4d5e-a4ca-5235256c96a6	2021-09-26 07:06:36+00	2021-09-26 07:06:36+00	search-new-get-19	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v2/desktop/search$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
339da7f1-54c1-4ee1-8417-a22e85c1dd82	2021-09-26 07:07:10+00	2021-09-26 07:07:10+00	search-new-get-20	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/product-variation/search$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
60e733ae-8328-44ca-b43c-47e3e4235337	2021-09-26 07:33:11+00	2021-09-26 07:33:11+00	search-new-get-21	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/search$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
dbd59c9f-e8de-4fab-b247-ac000034ac66	2021-09-26 07:34:02+00	2021-09-26 07:34:02+00	search-new-get-22	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/service$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
5a9fe58e-6ed3-403d-b87c-bfce3fdf0ea7	2021-09-26 07:34:26+00	2021-09-26 07:34:26+00	search-new-get-23	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/cities$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
e7ec5d98-2d96-4e26-b8c0-123cd83f48d3	2021-09-26 07:34:50+00	2021-09-26 07:34:50+00	search-new-get-24	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/cuisine$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
68667152-2950-4036-9c10-35288c0ce2be	2021-09-26 07:35:12+00	2021-09-26 07:35:12+00	search-new-get-25	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/desktop/vendors-list$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
b0f84542-f1b8-4ffc-ae6d-f16bf35f30d6	2021-09-26 07:35:37+00	2021-09-26 07:35:37+00	search-new-get-26	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/product/market/best-seller$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
5f5676f7-9f55-45b0-9502-75e38784fb2f	2021-09-26 07:36:10+00	2021-09-26 07:36:10+00	search-new-get-27	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/product/market/as-always$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
c847aeca-9be1-40ab-b8ea-b9f2a9f3972e	2021-09-26 07:36:41+00	2021-09-26 07:36:41+00	search-new-get-28	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/market-list-snapp$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
11d0abc3-513e-41e3-a6be-3032a8ad69b8	2021-09-26 07:37:06+00	2021-09-26 07:37:06+00	search-new-get-29	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/mobile/v2/suggest$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
b93b8a44-4b79-4d81-9697-43729d7431f4	2021-09-26 07:37:30+00	2021-09-26 07:37:30+00	search-new-get-30	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/search/api/v1/is_market/[0-9]+$}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
05c84acd-9bb3-4753-abd3-10822a9a1e2c	2021-09-26 09:15:04+00	2021-09-26 09:15:04+00	search-new-get-foodparty	ef02aa75-8110-402a-9cf1-75995b3488f9	{http,https}	{GET,OPTIONS}	{api.snappxtage.ir,newapi.snappxtage.ir}	{/676858d198d35e7713a47e66ba0755c8/mobile-offers/*}	\N	\N	\N	0	f	f	\N	426	\N	v0	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	t	t
\.


--
-- Data for Name: schema_meta; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.schema_meta (key, subsystem, last_executed, executed, pending) FROM stdin;
schema_meta	oauth2	005_210_to_211	{000_base_oauth2,003_130_to_140,004_200_to_210,005_210_to_211}	{}
schema_meta	rate-limiting	004_200_to_210	{000_base_rate_limiting,003_10_to_112,004_200_to_210}	\N
schema_meta	response-ratelimiting	000_base_response_rate_limiting	{000_base_response_rate_limiting}	\N
schema_meta	session	001_add_ttl_index	{000_base_session,001_add_ttl_index}	\N
schema_meta	core	013_220_to_230	{000_base,003_100_to_110,004_110_to_120,005_120_to_130,006_130_to_140,007_140_to_150,008_150_to_200,009_200_to_210,010_210_to_211,011_212_to_213,012_213_to_220,013_220_to_230}	{}
schema_meta	acl	004_212_to_213	{000_base_acl,002_130_to_140,003_200_to_210,004_212_to_213}	{}
schema_meta	acme	000_base_acme	{000_base_acme}	\N
schema_meta	basic-auth	003_200_to_210	{000_base_basic_auth,002_130_to_140,003_200_to_210}	{}
schema_meta	bot-detection	001_200_to_210	{001_200_to_210}	{}
schema_meta	hmac-auth	003_200_to_210	{000_base_hmac_auth,002_130_to_140,003_200_to_210}	{}
schema_meta	ip-restriction	001_200_to_210	{001_200_to_210}	{}
schema_meta	jwt	003_200_to_210	{000_base_jwt,002_130_to_140,003_200_to_210}	{}
schema_meta	key-auth	003_200_to_210	{000_base_key_auth,002_130_to_140,003_200_to_210}	{}
\.


--
-- Data for Name: services; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.services (id, created_at, updated_at, name, retries, protocol, host, port, path, connect_timeout, write_timeout, read_timeout, tags, client_certificate_id, tls_verify, tls_verify_depth, ca_certificates, ws_id) FROM stdin;
4437d75c-187b-4eb1-8921-b63375e240e3	2021-09-25 08:34:23+00	2021-09-25 19:54:40+00	api.core	0	http	chart-core.core.svc.cluster.local	80	\N	50000	50000	50000	\N	\N	\N	\N	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
06bf665e-b710-47af-a38e-c551fdb9a753	2021-09-25 12:45:23+00	2021-09-26 07:47:53+00	vendor-auth	0	http	chart-auth.vendor-auth.svc.cluster.local	8085	\N	60000	60000	60000	\N	\N	\N	\N	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
0fe164ff-5eef-4ef8-b493-0abb3a9baf5c	2021-09-25 12:48:07+00	2021-09-26 07:48:05+00	vendor-authomation	0	http	chart-web.vendor-automation.svc.cluster.local	80	\N	60000	60000	60000	\N	\N	\N	\N	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
4453a967-12d1-4eb0-8282-615dbeed79d3	2021-09-25 10:39:05+00	2021-09-26 07:48:21+00	stock-service	0	http	chart-stock.stock.svc.cluster.local	80	\N	60000	60000	60000	\N	\N	\N	\N	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
dfca2ac3-9ad3-4f69-a0f9-862818f64489	2021-09-25 15:04:32+00	2021-09-26 07:48:30+00	vms-api	0	http	chart-serializer.vms-api.svc.cluster.local	80	\N	60000	60000	60000	\N	\N	\N	\N	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
ef02aa75-8110-402a-9cf1-75995b3488f9	2021-09-25 09:04:53+00	2021-09-26 07:48:41+00	search	0	http	chart-search.search.svc.cluster.local	8095	\N	60000	60000	60000	\N	\N	\N	\N	\N	18513ccb-460a-4cca-ba2b-d6ad5f0b03fa
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.sessions (id, session_id, expires, data, created_at, ttl) FROM stdin;
\.


--
-- Data for Name: snis; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.snis (id, created_at, name, certificate_id, tags, ws_id) FROM stdin;
\.


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.tags (entity_id, entity_name, tags) FROM stdin;
36b9e1fa-700d-4524-8a93-4f8567f4c77b	routes	\N
902b9d24-e6c2-45b0-be9c-22c76fe1ab06	routes	\N
628fc3a9-d8e5-49d3-bc76-286332213bee	routes	\N
b30257a8-247f-4aeb-928e-b0a4a4390f2a	routes	\N
df62e504-082a-44d0-b621-aee2cb80d404	routes	\N
172a0dd1-cf27-41a4-8e75-61a93fff988c	routes	\N
8a7f8564-de36-42e6-bb5f-be9851d7385b	routes	\N
ea58fd54-20db-4e90-9ba0-5d0ef2d5ea0a	plugins	\N
380e1967-a7cd-480c-a29e-ed60b2b0f182	routes	\N
4437d75c-187b-4eb1-8921-b63375e240e3	services	\N
7de4672c-5738-46e5-bde0-1e486a6e9a07	routes	\N
38d7fafe-3a60-43f9-9ac9-3668f2a2351b	routes	\N
1ef8817d-3481-4d67-9a79-38b3473a5a4a	routes	\N
9cb87bb1-e08b-4ba5-bacc-765756f444ee	routes	\N
646d77d9-ca90-4098-a782-95cfad573b48	routes	\N
cde68cad-126e-48a4-8a55-80711dc851ce	routes	\N
7c686aba-5859-4eec-93da-970254d13c27	routes	\N
1a00071c-1f6e-41cb-88e2-711bd0dfb297	routes	\N
5d2ca0a6-5942-40d2-8a14-1769e0826b60	routes	\N
5a273e27-1ac2-4138-ace5-c51a4b156bd6	routes	\N
11049936-252c-4300-8daf-18fbd30cafe9	routes	\N
435333c5-4830-4264-a26f-2124affdae12	routes	\N
a9d6e84b-692b-4936-b3af-070dbeba07e0	routes	\N
cbedc8cb-6c60-4331-8c49-bb5ea215ae11	routes	\N
404d69a1-2685-4d4d-a8d1-698d6dee87be	routes	\N
a75a7096-0800-4a18-987d-9ca7dde72c04	routes	\N
f1cc425e-36d6-4a01-81be-127e7f5b9875	plugins	\N
63fe6fd0-aa89-413e-adfb-6316986f9b6f	plugins	\N
73b8ea14-0d3a-4564-8df7-21e5d222868a	routes	\N
c2672716-cae5-4b26-a01c-73efbb7a655c	plugins	\N
14802be3-04dd-4666-8def-d8ec9b324546	plugins	\N
d1b3a6df-2eaa-4afc-a969-74abfd83b150	plugins	\N
046b8391-1657-4cce-89dd-b9d738270c96	plugins	\N
5c434d4c-38b0-4466-aa9b-46c09d0bbb27	routes	\N
a8f084d2-4f2b-4657-9a69-4c9e8b6c35c6	routes	\N
8060f988-b980-4c19-9fd4-4505e615ea94	routes	\N
2e346350-aa3e-496e-9b4a-495c59f88f62	routes	\N
b4e7ecee-3298-42f0-b07d-9a8459b09cd7	routes	\N
bd7de8c2-3440-42c1-b1d8-1d01fd8512ef	routes	\N
2de8d873-962f-48f9-9182-59ac84aa265a	routes	\N
6c1e05bb-859e-4493-8764-ed9ea56bf89a	routes	\N
16704921-2efe-4bb3-bc93-68eeea5b61c5	routes	\N
5b673713-5c25-42cf-98cc-ba9f02ac9919	routes	\N
425c6f79-16be-4104-8dd4-c24b6801a160	routes	\N
826b1303-7012-4d3c-8b90-7fefffb77084	routes	\N
156fe7be-b49d-49d2-bc50-1cc81b1286a9	routes	\N
b49bf01c-7389-455a-8353-3dc035c8bf65	routes	\N
4475469f-813e-47cc-8142-864092ab6b2e	routes	\N
bd2a3db6-27c6-4d3f-aa32-26a830d82082	routes	\N
1126e068-75a4-4c5f-b768-bebf21605e4c	routes	\N
3569a952-1c3d-4c66-befa-e81afff853b5	routes	\N
26ef2403-ba12-4900-94c4-2b2ae71c83db	routes	\N
cb17d91f-5897-4d5e-a4ca-5235256c96a6	routes	\N
339da7f1-54c1-4ee1-8417-a22e85c1dd82	routes	\N
60e733ae-8328-44ca-b43c-47e3e4235337	routes	\N
dbd59c9f-e8de-4fab-b247-ac000034ac66	routes	\N
5a9fe58e-6ed3-403d-b87c-bfce3fdf0ea7	routes	\N
e7ec5d98-2d96-4e26-b8c0-123cd83f48d3	routes	\N
68667152-2950-4036-9c10-35288c0ce2be	routes	\N
b0f84542-f1b8-4ffc-ae6d-f16bf35f30d6	routes	\N
5f5676f7-9f55-45b0-9502-75e38784fb2f	routes	\N
c847aeca-9be1-40ab-b8ea-b9f2a9f3972e	routes	\N
11d0abc3-513e-41e3-a6be-3032a8ad69b8	routes	\N
b93b8a44-4b79-4d81-9697-43729d7431f4	routes	\N
06bf665e-b710-47af-a38e-c551fdb9a753	services	\N
0fe164ff-5eef-4ef8-b493-0abb3a9baf5c	services	\N
4453a967-12d1-4eb0-8282-615dbeed79d3	services	\N
dfca2ac3-9ad3-4f69-a0f9-862818f64489	services	\N
ef02aa75-8110-402a-9cf1-75995b3488f9	services	\N
05c84acd-9bb3-4753-abd3-10822a9a1e2c	routes	\N
a5445735-7881-4eaa-adae-391aaeea8621	plugins	\N
\.


--
-- Data for Name: targets; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.targets (id, created_at, upstream_id, target, weight, tags, ws_id) FROM stdin;
\.


--
-- Data for Name: ttls; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.ttls (primary_key_value, primary_uuid_value, table_name, primary_key_name, expire_at) FROM stdin;
\.


--
-- Data for Name: upstreams; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.upstreams (id, created_at, name, hash_on, hash_fallback, hash_on_header, hash_fallback_header, hash_on_cookie, hash_on_cookie_path, slots, healthchecks, tags, algorithm, host_header, client_certificate_id, ws_id) FROM stdin;
\.


--
-- Data for Name: workspaces; Type: TABLE DATA; Schema: public; Owner: kong
--

COPY public.workspaces (id, name, comment, created_at, meta, config) FROM stdin;
18513ccb-460a-4cca-ba2b-d6ad5f0b03fa	default	\N	2021-09-22 18:25:13+00	\N	\N
\.


--
-- Name: acls acls_cache_key_key; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.acls
    ADD CONSTRAINT acls_cache_key_key UNIQUE (cache_key);


--
-- Name: acls acls_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.acls
    ADD CONSTRAINT acls_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: acls acls_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.acls
    ADD CONSTRAINT acls_pkey PRIMARY KEY (id);


--
-- Name: acme_storage acme_storage_key_key; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.acme_storage
    ADD CONSTRAINT acme_storage_key_key UNIQUE (key);


--
-- Name: acme_storage acme_storage_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.acme_storage
    ADD CONSTRAINT acme_storage_pkey PRIMARY KEY (id);


--
-- Name: basicauth_credentials basicauth_credentials_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.basicauth_credentials
    ADD CONSTRAINT basicauth_credentials_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: basicauth_credentials basicauth_credentials_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.basicauth_credentials
    ADD CONSTRAINT basicauth_credentials_pkey PRIMARY KEY (id);


--
-- Name: basicauth_credentials basicauth_credentials_ws_id_username_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.basicauth_credentials
    ADD CONSTRAINT basicauth_credentials_ws_id_username_unique UNIQUE (ws_id, username);


--
-- Name: ca_certificates ca_certificates_cert_digest_key; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.ca_certificates
    ADD CONSTRAINT ca_certificates_cert_digest_key UNIQUE (cert_digest);


--
-- Name: ca_certificates ca_certificates_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.ca_certificates
    ADD CONSTRAINT ca_certificates_pkey PRIMARY KEY (id);


--
-- Name: certificates certificates_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.certificates
    ADD CONSTRAINT certificates_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: certificates certificates_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.certificates
    ADD CONSTRAINT certificates_pkey PRIMARY KEY (id);


--
-- Name: cluster_events cluster_events_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.cluster_events
    ADD CONSTRAINT cluster_events_pkey PRIMARY KEY (id);


--
-- Name: clustering_data_planes clustering_data_planes_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.clustering_data_planes
    ADD CONSTRAINT clustering_data_planes_pkey PRIMARY KEY (id);


--
-- Name: consumers consumers_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.consumers
    ADD CONSTRAINT consumers_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: consumers consumers_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.consumers
    ADD CONSTRAINT consumers_pkey PRIMARY KEY (id);


--
-- Name: consumers consumers_ws_id_custom_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.consumers
    ADD CONSTRAINT consumers_ws_id_custom_id_unique UNIQUE (ws_id, custom_id);


--
-- Name: consumers consumers_ws_id_username_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.consumers
    ADD CONSTRAINT consumers_ws_id_username_unique UNIQUE (ws_id, username);


--
-- Name: hmacauth_credentials hmacauth_credentials_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.hmacauth_credentials
    ADD CONSTRAINT hmacauth_credentials_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: hmacauth_credentials hmacauth_credentials_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.hmacauth_credentials
    ADD CONSTRAINT hmacauth_credentials_pkey PRIMARY KEY (id);


--
-- Name: hmacauth_credentials hmacauth_credentials_ws_id_username_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.hmacauth_credentials
    ADD CONSTRAINT hmacauth_credentials_ws_id_username_unique UNIQUE (ws_id, username);


--
-- Name: jwt_secrets jwt_secrets_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.jwt_secrets
    ADD CONSTRAINT jwt_secrets_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: jwt_secrets jwt_secrets_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.jwt_secrets
    ADD CONSTRAINT jwt_secrets_pkey PRIMARY KEY (id);


--
-- Name: jwt_secrets jwt_secrets_ws_id_key_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.jwt_secrets
    ADD CONSTRAINT jwt_secrets_ws_id_key_unique UNIQUE (ws_id, key);


--
-- Name: keyauth_credentials keyauth_credentials_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.keyauth_credentials
    ADD CONSTRAINT keyauth_credentials_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: keyauth_credentials keyauth_credentials_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.keyauth_credentials
    ADD CONSTRAINT keyauth_credentials_pkey PRIMARY KEY (id);


--
-- Name: keyauth_credentials keyauth_credentials_ws_id_key_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.keyauth_credentials
    ADD CONSTRAINT keyauth_credentials_ws_id_key_unique UNIQUE (ws_id, key);


--
-- Name: locks locks_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.locks
    ADD CONSTRAINT locks_pkey PRIMARY KEY (key);


--
-- Name: oauth2_authorization_codes oauth2_authorization_codes_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_authorization_codes
    ADD CONSTRAINT oauth2_authorization_codes_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: oauth2_authorization_codes oauth2_authorization_codes_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_authorization_codes
    ADD CONSTRAINT oauth2_authorization_codes_pkey PRIMARY KEY (id);


--
-- Name: oauth2_authorization_codes oauth2_authorization_codes_ws_id_code_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_authorization_codes
    ADD CONSTRAINT oauth2_authorization_codes_ws_id_code_unique UNIQUE (ws_id, code);


--
-- Name: oauth2_credentials oauth2_credentials_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_credentials
    ADD CONSTRAINT oauth2_credentials_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: oauth2_credentials oauth2_credentials_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_credentials
    ADD CONSTRAINT oauth2_credentials_pkey PRIMARY KEY (id);


--
-- Name: oauth2_credentials oauth2_credentials_ws_id_client_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_credentials
    ADD CONSTRAINT oauth2_credentials_ws_id_client_id_unique UNIQUE (ws_id, client_id);


--
-- Name: oauth2_tokens oauth2_tokens_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_tokens
    ADD CONSTRAINT oauth2_tokens_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: oauth2_tokens oauth2_tokens_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_tokens
    ADD CONSTRAINT oauth2_tokens_pkey PRIMARY KEY (id);


--
-- Name: oauth2_tokens oauth2_tokens_ws_id_access_token_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_tokens
    ADD CONSTRAINT oauth2_tokens_ws_id_access_token_unique UNIQUE (ws_id, access_token);


--
-- Name: oauth2_tokens oauth2_tokens_ws_id_refresh_token_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_tokens
    ADD CONSTRAINT oauth2_tokens_ws_id_refresh_token_unique UNIQUE (ws_id, refresh_token);


--
-- Name: parameters parameters_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.parameters
    ADD CONSTRAINT parameters_pkey PRIMARY KEY (key);


--
-- Name: plugins plugins_cache_key_key; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.plugins
    ADD CONSTRAINT plugins_cache_key_key UNIQUE (cache_key);


--
-- Name: plugins plugins_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.plugins
    ADD CONSTRAINT plugins_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: plugins plugins_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.plugins
    ADD CONSTRAINT plugins_pkey PRIMARY KEY (id);


--
-- Name: ratelimiting_metrics ratelimiting_metrics_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.ratelimiting_metrics
    ADD CONSTRAINT ratelimiting_metrics_pkey PRIMARY KEY (identifier, period, period_date, service_id, route_id);


--
-- Name: response_ratelimiting_metrics response_ratelimiting_metrics_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.response_ratelimiting_metrics
    ADD CONSTRAINT response_ratelimiting_metrics_pkey PRIMARY KEY (identifier, period, period_date, service_id, route_id);


--
-- Name: routes routes_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.routes
    ADD CONSTRAINT routes_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: routes routes_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.routes
    ADD CONSTRAINT routes_pkey PRIMARY KEY (id);


--
-- Name: routes routes_ws_id_name_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.routes
    ADD CONSTRAINT routes_ws_id_name_unique UNIQUE (ws_id, name);


--
-- Name: schema_meta schema_meta_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.schema_meta
    ADD CONSTRAINT schema_meta_pkey PRIMARY KEY (key, subsystem);


--
-- Name: services services_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.services
    ADD CONSTRAINT services_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: services services_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.services
    ADD CONSTRAINT services_pkey PRIMARY KEY (id);


--
-- Name: services services_ws_id_name_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.services
    ADD CONSTRAINT services_ws_id_name_unique UNIQUE (ws_id, name);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: sessions sessions_session_id_key; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_session_id_key UNIQUE (session_id);


--
-- Name: snis snis_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.snis
    ADD CONSTRAINT snis_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: snis snis_name_key; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.snis
    ADD CONSTRAINT snis_name_key UNIQUE (name);


--
-- Name: snis snis_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.snis
    ADD CONSTRAINT snis_pkey PRIMARY KEY (id);


--
-- Name: tags tags_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (entity_id);


--
-- Name: targets targets_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.targets
    ADD CONSTRAINT targets_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: targets targets_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.targets
    ADD CONSTRAINT targets_pkey PRIMARY KEY (id);


--
-- Name: ttls ttls_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.ttls
    ADD CONSTRAINT ttls_pkey PRIMARY KEY (primary_key_value, table_name);


--
-- Name: upstreams upstreams_id_ws_id_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.upstreams
    ADD CONSTRAINT upstreams_id_ws_id_unique UNIQUE (id, ws_id);


--
-- Name: upstreams upstreams_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.upstreams
    ADD CONSTRAINT upstreams_pkey PRIMARY KEY (id);


--
-- Name: upstreams upstreams_ws_id_name_unique; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.upstreams
    ADD CONSTRAINT upstreams_ws_id_name_unique UNIQUE (ws_id, name);


--
-- Name: workspaces workspaces_name_key; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.workspaces
    ADD CONSTRAINT workspaces_name_key UNIQUE (name);


--
-- Name: workspaces workspaces_pkey; Type: CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.workspaces
    ADD CONSTRAINT workspaces_pkey PRIMARY KEY (id);


--
-- Name: acls_consumer_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX acls_consumer_id_idx ON public.acls USING btree (consumer_id);


--
-- Name: acls_group_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX acls_group_idx ON public.acls USING btree ("group");


--
-- Name: acls_tags_idex_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX acls_tags_idex_tags_idx ON public.acls USING gin (tags);


--
-- Name: basicauth_consumer_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX basicauth_consumer_id_idx ON public.basicauth_credentials USING btree (consumer_id);


--
-- Name: basicauth_tags_idex_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX basicauth_tags_idex_tags_idx ON public.basicauth_credentials USING gin (tags);


--
-- Name: certificates_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX certificates_tags_idx ON public.certificates USING gin (tags);


--
-- Name: cluster_events_at_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX cluster_events_at_idx ON public.cluster_events USING btree (at);


--
-- Name: cluster_events_channel_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX cluster_events_channel_idx ON public.cluster_events USING btree (channel);


--
-- Name: cluster_events_expire_at_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX cluster_events_expire_at_idx ON public.cluster_events USING btree (expire_at);


--
-- Name: clustering_data_planes_ttl_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX clustering_data_planes_ttl_idx ON public.clustering_data_planes USING btree (ttl);


--
-- Name: consumers_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX consumers_tags_idx ON public.consumers USING gin (tags);


--
-- Name: consumers_username_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX consumers_username_idx ON public.consumers USING btree (lower(username));


--
-- Name: hmacauth_credentials_consumer_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX hmacauth_credentials_consumer_id_idx ON public.hmacauth_credentials USING btree (consumer_id);


--
-- Name: hmacauth_tags_idex_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX hmacauth_tags_idex_tags_idx ON public.hmacauth_credentials USING gin (tags);


--
-- Name: jwt_secrets_consumer_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX jwt_secrets_consumer_id_idx ON public.jwt_secrets USING btree (consumer_id);


--
-- Name: jwt_secrets_secret_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX jwt_secrets_secret_idx ON public.jwt_secrets USING btree (secret);


--
-- Name: jwtsecrets_tags_idex_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX jwtsecrets_tags_idex_tags_idx ON public.jwt_secrets USING gin (tags);


--
-- Name: keyauth_credentials_consumer_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX keyauth_credentials_consumer_id_idx ON public.keyauth_credentials USING btree (consumer_id);


--
-- Name: keyauth_credentials_ttl_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX keyauth_credentials_ttl_idx ON public.keyauth_credentials USING btree (ttl);


--
-- Name: keyauth_tags_idex_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX keyauth_tags_idex_tags_idx ON public.keyauth_credentials USING gin (tags);


--
-- Name: locks_ttl_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX locks_ttl_idx ON public.locks USING btree (ttl);


--
-- Name: oauth2_authorization_codes_authenticated_userid_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_authorization_codes_authenticated_userid_idx ON public.oauth2_authorization_codes USING btree (authenticated_userid);


--
-- Name: oauth2_authorization_codes_ttl_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_authorization_codes_ttl_idx ON public.oauth2_authorization_codes USING btree (ttl);


--
-- Name: oauth2_authorization_credential_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_authorization_credential_id_idx ON public.oauth2_authorization_codes USING btree (credential_id);


--
-- Name: oauth2_authorization_service_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_authorization_service_id_idx ON public.oauth2_authorization_codes USING btree (service_id);


--
-- Name: oauth2_credentials_consumer_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_credentials_consumer_id_idx ON public.oauth2_credentials USING btree (consumer_id);


--
-- Name: oauth2_credentials_secret_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_credentials_secret_idx ON public.oauth2_credentials USING btree (client_secret);


--
-- Name: oauth2_credentials_tags_idex_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_credentials_tags_idex_tags_idx ON public.oauth2_credentials USING gin (tags);


--
-- Name: oauth2_tokens_authenticated_userid_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_tokens_authenticated_userid_idx ON public.oauth2_tokens USING btree (authenticated_userid);


--
-- Name: oauth2_tokens_credential_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_tokens_credential_id_idx ON public.oauth2_tokens USING btree (credential_id);


--
-- Name: oauth2_tokens_service_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_tokens_service_id_idx ON public.oauth2_tokens USING btree (service_id);


--
-- Name: oauth2_tokens_ttl_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX oauth2_tokens_ttl_idx ON public.oauth2_tokens USING btree (ttl);


--
-- Name: plugins_consumer_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX plugins_consumer_id_idx ON public.plugins USING btree (consumer_id);


--
-- Name: plugins_name_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX plugins_name_idx ON public.plugins USING btree (name);


--
-- Name: plugins_route_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX plugins_route_id_idx ON public.plugins USING btree (route_id);


--
-- Name: plugins_service_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX plugins_service_id_idx ON public.plugins USING btree (service_id);


--
-- Name: plugins_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX plugins_tags_idx ON public.plugins USING gin (tags);


--
-- Name: ratelimiting_metrics_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX ratelimiting_metrics_idx ON public.ratelimiting_metrics USING btree (service_id, route_id, period_date, period);


--
-- Name: ratelimiting_metrics_ttl_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX ratelimiting_metrics_ttl_idx ON public.ratelimiting_metrics USING btree (ttl);


--
-- Name: routes_service_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX routes_service_id_idx ON public.routes USING btree (service_id);


--
-- Name: routes_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX routes_tags_idx ON public.routes USING gin (tags);


--
-- Name: services_fkey_client_certificate; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX services_fkey_client_certificate ON public.services USING btree (client_certificate_id);


--
-- Name: services_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX services_tags_idx ON public.services USING gin (tags);


--
-- Name: session_sessions_expires_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX session_sessions_expires_idx ON public.sessions USING btree (expires);


--
-- Name: sessions_ttl_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX sessions_ttl_idx ON public.sessions USING btree (ttl);


--
-- Name: snis_certificate_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX snis_certificate_id_idx ON public.snis USING btree (certificate_id);


--
-- Name: snis_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX snis_tags_idx ON public.snis USING gin (tags);


--
-- Name: tags_entity_name_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX tags_entity_name_idx ON public.tags USING btree (entity_name);


--
-- Name: tags_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX tags_tags_idx ON public.tags USING gin (tags);


--
-- Name: targets_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX targets_tags_idx ON public.targets USING gin (tags);


--
-- Name: targets_target_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX targets_target_idx ON public.targets USING btree (target);


--
-- Name: targets_upstream_id_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX targets_upstream_id_idx ON public.targets USING btree (upstream_id);


--
-- Name: ttls_primary_uuid_value_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX ttls_primary_uuid_value_idx ON public.ttls USING btree (primary_uuid_value);


--
-- Name: upstreams_fkey_client_certificate; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX upstreams_fkey_client_certificate ON public.upstreams USING btree (client_certificate_id);


--
-- Name: upstreams_tags_idx; Type: INDEX; Schema: public; Owner: kong
--

CREATE INDEX upstreams_tags_idx ON public.upstreams USING gin (tags);


--
-- Name: acls acls_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER acls_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.acls FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: basicauth_credentials basicauth_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER basicauth_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.basicauth_credentials FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: ca_certificates ca_certificates_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER ca_certificates_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.ca_certificates FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: certificates certificates_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER certificates_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.certificates FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: consumers consumers_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER consumers_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.consumers FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: hmacauth_credentials hmacauth_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER hmacauth_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.hmacauth_credentials FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: jwt_secrets jwtsecrets_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER jwtsecrets_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.jwt_secrets FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: keyauth_credentials keyauth_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER keyauth_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.keyauth_credentials FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: oauth2_credentials oauth2_credentials_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER oauth2_credentials_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.oauth2_credentials FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: plugins plugins_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER plugins_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.plugins FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: routes routes_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER routes_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.routes FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: services services_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER services_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.services FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: snis snis_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER snis_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.snis FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: targets targets_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER targets_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.targets FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: upstreams upstreams_sync_tags_trigger; Type: TRIGGER; Schema: public; Owner: kong
--

CREATE TRIGGER upstreams_sync_tags_trigger AFTER INSERT OR DELETE OR UPDATE OF tags ON public.upstreams FOR EACH ROW EXECUTE PROCEDURE public.sync_tags();


--
-- Name: acls acls_consumer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.acls
    ADD CONSTRAINT acls_consumer_id_fkey FOREIGN KEY (consumer_id, ws_id) REFERENCES public.consumers(id, ws_id) ON DELETE CASCADE;


--
-- Name: acls acls_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.acls
    ADD CONSTRAINT acls_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: basicauth_credentials basicauth_credentials_consumer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.basicauth_credentials
    ADD CONSTRAINT basicauth_credentials_consumer_id_fkey FOREIGN KEY (consumer_id, ws_id) REFERENCES public.consumers(id, ws_id) ON DELETE CASCADE;


--
-- Name: basicauth_credentials basicauth_credentials_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.basicauth_credentials
    ADD CONSTRAINT basicauth_credentials_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: certificates certificates_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.certificates
    ADD CONSTRAINT certificates_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: consumers consumers_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.consumers
    ADD CONSTRAINT consumers_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: hmacauth_credentials hmacauth_credentials_consumer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.hmacauth_credentials
    ADD CONSTRAINT hmacauth_credentials_consumer_id_fkey FOREIGN KEY (consumer_id, ws_id) REFERENCES public.consumers(id, ws_id) ON DELETE CASCADE;


--
-- Name: hmacauth_credentials hmacauth_credentials_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.hmacauth_credentials
    ADD CONSTRAINT hmacauth_credentials_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: jwt_secrets jwt_secrets_consumer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.jwt_secrets
    ADD CONSTRAINT jwt_secrets_consumer_id_fkey FOREIGN KEY (consumer_id, ws_id) REFERENCES public.consumers(id, ws_id) ON DELETE CASCADE;


--
-- Name: jwt_secrets jwt_secrets_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.jwt_secrets
    ADD CONSTRAINT jwt_secrets_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: keyauth_credentials keyauth_credentials_consumer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.keyauth_credentials
    ADD CONSTRAINT keyauth_credentials_consumer_id_fkey FOREIGN KEY (consumer_id, ws_id) REFERENCES public.consumers(id, ws_id) ON DELETE CASCADE;


--
-- Name: keyauth_credentials keyauth_credentials_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.keyauth_credentials
    ADD CONSTRAINT keyauth_credentials_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: oauth2_authorization_codes oauth2_authorization_codes_credential_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_authorization_codes
    ADD CONSTRAINT oauth2_authorization_codes_credential_id_fkey FOREIGN KEY (credential_id, ws_id) REFERENCES public.oauth2_credentials(id, ws_id) ON DELETE CASCADE;


--
-- Name: oauth2_authorization_codes oauth2_authorization_codes_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_authorization_codes
    ADD CONSTRAINT oauth2_authorization_codes_service_id_fkey FOREIGN KEY (service_id, ws_id) REFERENCES public.services(id, ws_id) ON DELETE CASCADE;


--
-- Name: oauth2_authorization_codes oauth2_authorization_codes_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_authorization_codes
    ADD CONSTRAINT oauth2_authorization_codes_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: oauth2_credentials oauth2_credentials_consumer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_credentials
    ADD CONSTRAINT oauth2_credentials_consumer_id_fkey FOREIGN KEY (consumer_id, ws_id) REFERENCES public.consumers(id, ws_id) ON DELETE CASCADE;


--
-- Name: oauth2_credentials oauth2_credentials_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_credentials
    ADD CONSTRAINT oauth2_credentials_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: oauth2_tokens oauth2_tokens_credential_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_tokens
    ADD CONSTRAINT oauth2_tokens_credential_id_fkey FOREIGN KEY (credential_id, ws_id) REFERENCES public.oauth2_credentials(id, ws_id) ON DELETE CASCADE;


--
-- Name: oauth2_tokens oauth2_tokens_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_tokens
    ADD CONSTRAINT oauth2_tokens_service_id_fkey FOREIGN KEY (service_id, ws_id) REFERENCES public.services(id, ws_id) ON DELETE CASCADE;


--
-- Name: oauth2_tokens oauth2_tokens_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.oauth2_tokens
    ADD CONSTRAINT oauth2_tokens_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: plugins plugins_consumer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.plugins
    ADD CONSTRAINT plugins_consumer_id_fkey FOREIGN KEY (consumer_id, ws_id) REFERENCES public.consumers(id, ws_id) ON DELETE CASCADE;


--
-- Name: plugins plugins_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.plugins
    ADD CONSTRAINT plugins_route_id_fkey FOREIGN KEY (route_id, ws_id) REFERENCES public.routes(id, ws_id) ON DELETE CASCADE;


--
-- Name: plugins plugins_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.plugins
    ADD CONSTRAINT plugins_service_id_fkey FOREIGN KEY (service_id, ws_id) REFERENCES public.services(id, ws_id) ON DELETE CASCADE;


--
-- Name: plugins plugins_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.plugins
    ADD CONSTRAINT plugins_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: routes routes_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.routes
    ADD CONSTRAINT routes_service_id_fkey FOREIGN KEY (service_id, ws_id) REFERENCES public.services(id, ws_id);


--
-- Name: routes routes_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.routes
    ADD CONSTRAINT routes_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: services services_client_certificate_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.services
    ADD CONSTRAINT services_client_certificate_id_fkey FOREIGN KEY (client_certificate_id, ws_id) REFERENCES public.certificates(id, ws_id);


--
-- Name: services services_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.services
    ADD CONSTRAINT services_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: snis snis_certificate_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.snis
    ADD CONSTRAINT snis_certificate_id_fkey FOREIGN KEY (certificate_id, ws_id) REFERENCES public.certificates(id, ws_id);


--
-- Name: snis snis_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.snis
    ADD CONSTRAINT snis_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: targets targets_upstream_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.targets
    ADD CONSTRAINT targets_upstream_id_fkey FOREIGN KEY (upstream_id, ws_id) REFERENCES public.upstreams(id, ws_id) ON DELETE CASCADE;


--
-- Name: targets targets_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.targets
    ADD CONSTRAINT targets_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: upstreams upstreams_client_certificate_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.upstreams
    ADD CONSTRAINT upstreams_client_certificate_id_fkey FOREIGN KEY (client_certificate_id) REFERENCES public.certificates(id);


--
-- Name: upstreams upstreams_ws_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kong
--

ALTER TABLE ONLY public.upstreams
    ADD CONSTRAINT upstreams_ws_id_fkey FOREIGN KEY (ws_id) REFERENCES public.workspaces(id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: kong
--

REVOKE ALL ON SCHEMA public FROM postgres;
REVOKE ALL ON SCHEMA public FROM PUBLIC;
GRANT ALL ON SCHEMA public TO kong;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

